#ifndef TEST_IMAGE_H
#define TEST_IMAGE_H

#include <vector>

// Generated from test_imgs/7.jpg
static const float test_image[784] = {
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     0.992157f,     1.000000f,     0.996078f,
    0.996078f,     1.000000f,     0.992157f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     0.992157f,     0.996078f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     0.996078f,     0.992157f,
    1.000000f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     0.984314f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.984314f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     0.992157f,     1.000000f,
    0.992157f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     0.992157f,     1.000000f,     0.992157f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,
    1.000000f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,
    1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    0.992157f,     0.996078f,     1.000000f,     0.980392f,     1.000000f,     0.992157f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     0.992157f,     1.000000f,     0.980392f,     1.000000f,     0.996078f,     0.992157f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,
    0.000000f,     0.003922f,     0.000000f,     0.000000f,     0.000000f,     0.000000f,     0.003922f,     0.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.003922f,     0.000000f,     0.000000f,     0.007843f,     1.000000f,     0.996078f,     1.000000f,
    0.996078f,     1.000000f,     0.000000f,     0.000000f,     0.992157f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.992157f,     1.000000f,     0.992157f,     0.996078f,     0.996078f,     1.000000f,     0.988235f,     1.000000f,     0.992157f,     0.003922f,     1.000000f,
    0.988235f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    0.996078f,     1.000000f,     0.988235f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     0.007843f,     0.000000f,     1.000000f,     1.000000f,     0.988235f,     1.000000f,     0.988235f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     0.996078f,     0.996078f,
    1.000000f,     0.988235f,     1.000000f,     0.996078f,     1.000000f,     0.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     0.996078f,     1.000000f,     0.988235f,     1.000000f,
    0.996078f,     0.000000f,     0.011765f,     0.003922f,     0.000000f,     0.996078f,     0.988235f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.984314f,     1.000000f,     1.000000f,     1.000000f,     0.000000f,     0.003922f,     0.000000f,     0.000000f,     0.003922f,     0.996078f,     0.996078f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     0.992157f,     1.000000f,     1.000000f,     0.996078f,     0.984314f,     1.000000f,     1.000000f,     0.000000f,     1.000000f,     0.996078f,     1.000000f,     0.988235f,     1.000000f,     0.996078f,     0.996078f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.984314f,     1.000000f,     1.000000f,     0.988235f,
    1.000000f,     1.000000f,     0.996078f,     0.000000f,     0.000000f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     0.996078f,     1.000000f,     0.992157f,     0.984314f,     1.000000f,     0.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.000000f,     0.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.000000f,     0.003922f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.992157f,     1.000000f,
    0.015686f,     0.007843f,     0.992157f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     0.000000f,     0.000000f,     0.988235f,     1.000000f,     0.992157f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     0.003922f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    0.988235f,     1.000000f,     0.984314f,     0.996078f,     1.000000f,     1.000000f,     0.976471f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.988235f,     1.000000f,     0.992157f,
    0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f

};

inline std::vector<float> get_test_image() {
    return std::vector<float>(test_image, test_image + 784);
}

#endif // TEST_IMAGE_H
