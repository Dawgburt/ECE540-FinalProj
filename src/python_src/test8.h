#ifndef TEST_IMAGE_H
#define TEST_IMAGE_H

#include <vector>

// Generated from test_imgs/8.jpg
static const float test_image[784] = {
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.984314f,     1.000000f,     1.000000f,     0.988235f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.984314f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     0.992157f,     1.000000f,     0.972549f,     1.000000f,     0.996078f,     0.992157f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.980392f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     0.992157f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.980392f,     1.000000f,     0.992157f,     1.000000f,     0.996078f,     0.992157f,     1.000000f,
    0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.988235f,     1.000000f,     0.988235f,     0.976471f,     0.839216f,     0.835294f,     1.000000f,     0.988235f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    0.996078f,     0.996078f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,
    1.000000f,     0.976471f,     0.658824f,     0.137255f,     0.003922f,     0.000000f,     0.349020f,     0.945098f,     0.992157f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     0.996078f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     0.541176f,     0.000000f,     0.486275f,
    0.972549f,     0.847059f,     0.141176f,     0.070588f,     0.984314f,     0.988235f,     0.996078f,     0.996078f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     0.913725f,     0.019608f,     0.486275f,     1.000000f,     1.000000f,     0.988235f,     0.917647f,     0.094118f,
    0.494118f,     0.992157f,     0.992157f,     1.000000f,     0.988235f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.419608f,     0.125490f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     1.000000f,     0.482353f,     0.203922f,     0.996078f,     1.000000f,     0.996078f,
    0.996078f,     0.996078f,     1.000000f,     0.988235f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     0.988235f,     0.968627f,
    0.188235f,     0.552941f,     1.000000f,     0.980392f,     1.000000f,     0.980392f,     0.992157f,     0.439216f,     0.231373f,     1.000000f,     0.992157f,     0.984314f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     0.988235f,     0.964706f,     0.160784f,     0.752941f,     1.000000f,     1.000000f,
    1.000000f,     0.992157f,     0.968627f,     0.141176f,     0.513726f,     0.992157f,     1.000000f,     0.988235f,     0.984314f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    0.992157f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.988235f,     0.243137f,     0.443137f,     0.980392f,     1.000000f,     0.988235f,     1.000000f,     0.305882f,     0.011765f,
    0.984314f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     1.000000f,     0.988235f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.564706f,     0.027451f,     0.901961f,     0.996078f,     1.000000f,     0.415686f,     0.000000f,     0.733333f,     0.992157f,     0.984314f,     1.000000f,     1.000000f,
    0.996078f,     0.996078f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     0.992157f,     0.988235f,
    1.000000f,     0.223529f,     0.160784f,     0.729412f,     0.074510f,     0.086275f,     0.894118f,     0.996078f,     1.000000f,     0.996078f,     0.992157f,     0.992157f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.992157f,     1.000000f,     0.929412f,     0.101961f,     0.000000f,
    0.278431f,     0.988235f,     1.000000f,     0.988235f,     0.996078f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     0.996078f,     1.000000f,     0.745098f,     0.007843f,     0.258824f,     0.043137f,     0.521569f,     1.000000f,     1.000000f,
    1.000000f,     0.992157f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     0.996078f,     0.996078f,     0.996078f,     0.996078f,     0.447059f,     0.337255f,     0.992157f,     0.627451f,     0.000000f,     0.576471f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,
    1.000000f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,
    1.000000f,     0.474510f,     0.321569f,     0.996078f,     1.000000f,     0.670588f,     0.007843f,     0.694118f,     0.988235f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     0.972549f,     0.749020f,     0.000000f,     0.929412f,
    0.984314f,     0.996078f,     0.454902f,     0.000000f,     0.945098f,     0.992157f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     0.964706f,     0.078431f,     0.215686f,     0.913725f,     1.000000f,     0.431373f,     0.000000f,
    0.945098f,     0.992157f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.992157f,     0.988235f,     0.913725f,     0.274510f,     0.031373f,     0.043137f,     0.117647f,     0.643137f,     0.988235f,     1.000000f,     1.000000f,     0.992157f,
    1.000000f,     1.000000f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,
    0.996078f,     1.000000f,     1.000000f,     0.984314f,     0.882353f,     0.878431f,     0.972549f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     0.996078f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     0.992157f,     1.000000f,
    1.000000f,     0.992157f,     1.000000f,     0.996078f,     1.000000f,     0.992157f,     1.000000f,     1.000000f,     0.996078f,     0.996078f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,
    1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f,     1.000000f

};

inline std::vector<float> get_test_image() {
    return std::vector<float>(test_image, test_image + 784);
}

#endif // TEST_IMAGE_H
